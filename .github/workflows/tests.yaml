name: Synthpops CI workflow
on: [pull_request]

jobs:
  install_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        python-version: [ '3.8' ]
    name: Install and test
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install synthpops
        run: pip install -e . 
      - name: Install tests
        run: pip install -r tests/requirements_test.txt
      - name: Run API tests
        working-directory: ./tests
        run: pytest --cov-config=.coveragerc --cov=../synthpops --junitxml=test-results.xml --workers auto --durations=0
      - name: Create coverage badge
        working-directory: ./tests
        run: coverage-badge -o coverage-badge.svg
      - name: Upload test results
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test_results
          path: tests/test-results.xml
      - name: Upload report
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: report
          path: tests/regression/report/
      - name: Create coverage report
        id: cv
        working-directory: ./tests
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        run: |

          # Code coverage report
          coverage html
          # cml-publish coverage-badge.svg --md >> cov.md
          # cml-send-comment cov.md
          echo \<p\> > report.md
          echo \<div\>\<b\> current code coverage \</b\>\</div\> >> report.md
          sed -n '/<table class="index">/,/<\/table>/p'  htmlcov/index.html >> report.md
          echo \</p\> >> report.md
          # get rid of links as they are not available to upload
          echo $(cat report.md | sed -e 's/<a href=[^>]*>//g' | sed -e 's/<\/a>//g' | sed 's/^[[:space:]]*//g' | tr -d '\n') > report_copy.md
          cat report_copy.md >> cov.md
          # cml-send-github-check cov.md
          echo "::set-output name=covdata::$(cat report_copy.md)"
          echo "::set-output name=covdata_escape::$(sed 's/"/\\"/g' cov.md)"
          
      - name: send github check    
        uses: LouisBrunner/checks-action@v1.1.1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Code Coverage
          conclusion: success
          output: |
            {"summary": "${{ steps.cv.outputs.covdata_escape }}"}  
          
      - name: find bot comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: current code coverage

      - name: create bot comment
        if: ${{ steps.fc.outputs.comment-id == 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.cv.outputs.covdata }}
          reactions: "rocket"

      - name: update bot comment
        if: ${{ steps.fc.outputs.comment-id != 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            ${{ steps.cv.outputs.covdata }}
          reactions: "rocket"
          edit-mode: "replace"
          
